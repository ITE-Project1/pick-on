<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.ite.pickon.domain.product.mapper.ProductMapper">
	<select id="selectProductListByStore" parameterType="hashmap" resultType="com.ite.pickon.domain.product.dto.ProductAdminVO">
		SELECT p.product_id, p.name, p.price, p.image_url, p.created_at, stk.quantity
		FROM store s
		JOIN stock stk ON s.store_id = stk.store_id
		JOIN product p ON stk.product_id = p.product_id
		WHERE s.store_id = #{storeId}
			<if test="keyword != null and keyword != ''">
				AND (p.name LIKE '%' || #{keyword} || '%')
			</if>
		ORDER BY
			<if test="pageable.sort != null">
				<foreach item="order" index="index" collection="pageable.sort.orders" separator=",">
					${order.property} ${order.direction}
				</foreach>
			</if>
		OFFSET #{pageable.offset} ROWS FETCH NEXT #{pageable.pageSize} ROWS ONLY
	</select>

	<insert id="insertNewProduct" parameterType="com.ite.pickon.domain.product.dto.ProductVO">
		insert into product(product_id, name, description, price, image_url)
		VALUES (#{productId},#{name}, #{description}, #{price}, #{imageUrl})
	</insert>

	<select id="selectProductDetail" parameterType="String" resultType="com.ite.pickon.domain.product.dto.ProductResponse">
		select product_id as productId, name, description, price, image_url as imageUrl
		from product
		where product_id LIKE #{productId}
	</select>
</mapper>